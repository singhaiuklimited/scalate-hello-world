<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.singhaiuklimited.scalate.tutorial</groupId>
    <!-- Mention your Application Name here -->
    <artifactId>scalate-hello-world</artifactId>
    <name>${project.artifactId}</name>
    <description>A simple hello world example showing how to configure and use Scalate library</description>
    <inceptionYear>2018</inceptionYear>
    <!-- Mention initial snapshot version number here -->
    <version>0.0.1-SNAPSHOT</version>
    <!-- Mention your application packaging format (POM/JAR/WAR) here -->
    <packaging>jar</packaging>

    <organization>
        <name>Singhai UK Limited</name>
        <url>http://business.google.com/website/singhaiuklimited/</url>
    </organization>

    <properties>
        <java.version>1.8</java.version>
        <logback.version>1.2.3</logback.version>
        <maven.compiler.plugin.version>3.7.0</maven.compiler.plugin.version>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <maven.shade.plugin.version>3.1.0</maven.shade.plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <scala.binary.version>2.12</scala.binary.version>
        <scala.logging.version>3.7.2</scala.logging.version>
        <scala.maven.plugin.version>3.3.1</scala.maven.plugin.version>
        <scalate.core.version>1.8.0</scalate.core.version>
        <scala.version>2.12.4</scala.version>
    </properties>

    <!-- Mention the application repo details here -->
    <scm>
        <connection>scm:git:https://github.com/singhaiuklimited/scalate-hello-world.git</connection>
        <developerConnection>scm:git:https://github.com/singhaiuklimited/scalate-hello-world.git</developerConnection>
        <url>https://github.com/singhaiuklimited/scalate-hello-world</url>
        <tag>0.0.1</tag>
    </scm>

    <dependencies>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-reflect</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-compiler</artifactId>
            <version>${scala.version}</version>
        </dependency>

        <!-- For Strict or Lazy Logging: Anything outside Actor context, even futures use this Logging -->
        <dependency>
            <groupId>com.typesafe.scala-logging</groupId>
            <artifactId>scala-logging_${scala.binary.version}</artifactId>
            <version>${scala.logging.version}</version>
        </dependency>

        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.version}</version>
        </dependency>

        <dependency>
            <groupId>org.scalatra.scalate</groupId>
            <artifactId>scalate-core_${scala.binary.version}</artifactId>
            <version>${scalate.core.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>*</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>

    <build>
        <finalName>scalate-hello-world</finalName>
        <sourceDirectory>src/main/scala</sourceDirectory>
        <testSourceDirectory>src/test/scala</testSourceDirectory>
        <directory>target</directory>
        <outputDirectory>target/classes</outputDirectory>
        <testOutputDirectory>target/test-classes</testOutputDirectory>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${maven.shade.plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>

        <plugins>
            <!-- Build an Uber JAR. Don't use maven jar or assembly plugins, as these are not compatible with Akka -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>uber</finalName>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <filters>
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                    </excludes>
                                </filter>
                            </filters>
                            <transformers>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                                    <resource>reference.conf</resource>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>com.singhaiuklimited.scalate.tutorial.Main</Main-Class>
                                    </manifestEntries>
                                </transformer>
                                <transformer
                                        implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                            </transformers>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Disable Maven's Java compiler -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>

            <plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>scala-maven-plugin</artifactId>
                <version>${scala.maven.plugin.version}</version>
                <configuration>
                    <args><!-- work-around for https://issues.scala-lang.org/browse/SI-8358-->
                        <arg>-nobootcp</arg>
                    </args>
                    <recompileMode>incremental</recompileMode>
                    <jvmArgs>
                        <jvmArg>-Xms128m</jvmArg>
                        <jvmArg>-Xmx512m</jvmArg>
                    </jvmArgs>
                </configuration>
                <executions>
                    <execution>
                        <id>compile-scala</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>compile-tests-scala</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>testCompile</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
